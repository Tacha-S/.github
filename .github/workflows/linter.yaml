name: lint-test

on:
  push:
    paths:
      - "**.py"
  workflow_call:
    secrets:
      token:
        required: false

jobs:
  clang:
    name: runner / c++
    runs-on: ubuntu-18.04
    steps:
      - name: Check out source repository
        uses: actions/checkout@v2
      - name: Download config
        run: wget https://raw.githubusercontent.com/Tacha-S/.github/main/.clang-format
      - uses: DoozyX/clang-format-lint-action@v0.12
        with:
          source: "."
          exclude: ""
          extensions: "h,cpp,hpp"
          clangFormatVersion: 8
          style: file
          inplace: true
      - name: suggester / clang-format
        uses: reviewdog/action-suggester@v1
        with:
          tool_name: clang-format
          filter_mode: file
          fail_on_error: true
  python-lint:
    name: runner / python
    runs-on: ubuntu-18.04
    steps:
      - name: Check out source repository
        uses: actions/checkout@v2
      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: "2.7"
      - name: autopep8 format
        uses: peter-evans/autopep8@v1
        with:
          args: --recursive --in-place --aggressive --aggressive --max-line-length 119 .
      - name: suggester / autopep8
        uses: reviewdog/action-suggester@v1
        with:
          tool_name: autopep8
          filter_mode: file
          fail_on_error: true
      - name: flake8 Lint
        uses: reviewdog/action-flake8@v3
        with:
          reporter: github-pr-review
          filter_mode: file
          fail_on_error: true
          flake8_args: --ignore=F401,W503 --max-line-length 119
  # cmake-format:
  #   runs-on: ubuntu-18.04
  #   name: cmake-format
  #   steps:
  #     - name: Check out source repository
  #       uses: actions/checkout@v2
  #     # - name: Format CMake files
  #     #   id: cmake-format
  #     #   uses: PuneetMatharu/cmake-format-lint-action@868082b20873d65687e64a4807ea342d1844c4c7
  #     #   with:
  #     #     args: --config-files .github/.cmake-format --check
  #     - name: Download config
  #       run: |
  #         wget https://raw.githubusercontent.com/Tacha-S/.github/main/.cmake-format
  #     - name: Format CMake files
  #       run: |
  #         pip3 install cmake-format
  #         find . -name '*.cmake' -o -name 'CMakeLists.txt' -print0 |\
  #         xargs -0 -I {} cmake-format -c .cmake-format --check {}
  # xmllint:
  #   runs-on: ubuntu-18.04
  #   name: xmllint
  #   steps:
  #     - name: Check out source repository
  #       uses: actions/checkout@v2
  #     - name: Format xml

  #     - name: Lint xml files
  #       run: |
  #         sudo apt install libxml2-utils
  #         wget https://gist.githubusercontent.com/nalt/dfa2abc9d2e3ae4feb82ca5608090387/raw/roslaunch.xsd
  #         find . -type f -regextype posix-egrep -regex ".*\/launch\/.*\.(launch|xml)$" -print0 |\
  #         xargs -0 -I {} -P8 bash -c "xmllint --schema roslaunch.xsd --format {} |\
  #         diff -B {} -"
  #         wget http://download.ros.org/schema/package_format3.xsd
  #         find . -type f -regextype posix-egrep -regex ".*package.xml" -print0 |\
  #         xargs -0 -I {} -P8 bash -c "xmllint --schema package_format3.xsd --format {} |\
  #         diff -B {} -"
  yamllint:
    name: runner / yamllint
    runs-on: ubuntu-18.04
    steps:
      - name: Check out source repository
        uses: actions/checkout@v2
      - name: Download config
        run: wget https://raw.githubusercontent.com/Tacha-S/.github/main/.yamllint
      - name: yamllint
        uses: reviewdog/action-yamllint@v1
        with:
          reporter: github-pr-review
          filter_mode: file
          fail_on_error: true
          yamllint_flags: -c .yamllint .
  xmllint:
    name: runner / xmllint
    runs-on: ubuntu-18.04
    steps:
      - name: Check out source repository
        uses: actions/checkout@v2
      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1
      - name: xmllint roslaunch
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: |
          sudo apt install libxml2-utils
          wget https://gist.githubusercontent.com/nalt/dfa2abc9d2e3ae4feb82ca5608090387/raw/roslaunch.xsd
          files=`find . -type f -regextype posix-egrep -regex ".*\/launch\/.*\.(launch|xml)$"`
          xmllint --noout --schema roslaunch.xsd ${files} 2>&1 1>/dev/null |\
          reviewdog -name="xmllint" -reporter=github-pr-review -efm='%f:%l:%m' -filter-mode=file -fail-on-error
      - name: xmllint package.xml
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: |
          wget http://download.ros.org/schema/package_format3.xsd
          files=`find . -type f -regextype posix-egrep -regex ".*package.xml"`
          xmllint --noout --schema package_format3.xsd ${files} 2>&1 1>/dev/null |\
          reviewdog -name="xmllint" -reporter=github-pr-review -efm='%f:%l:%m' -filter-mode=file -fail-on-error
